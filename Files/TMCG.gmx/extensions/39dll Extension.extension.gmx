<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>39dll Extension</name>
  <version>1.0</version>
  <author>Emmanuel Barroga</author>
  <date>5/18/2007</date>
  <license>Free to use, also for commercial games.</license>
  <description>39dll as an extension. (NOTE: The DLL is NOT included into the extension)</description>
  <helpfile></helpfile>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <androidinject></androidinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <androidPermissions/>
  <IncludedResources/>
  <files>
    <file>
      <filename>DllScripts.gml</filename>
      <origname>C:\Documents and Settings\Compaq_Administrator\My Documents\39dllV25\39dll\DllScripts.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>dllinit</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>dllinit(filename, sock_funcs, load_utils)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>dllfree</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>dllfree()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>tcpconnect</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>tcpconnect(ip, port, mode)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>tcplisten</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>tcplisten(port, max, mode)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>tcpaccept</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>tcpaccept(socket, mode)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>tcpip</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>tcpip(socket_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>setnagle</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>setnagle(socket_id, delay)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>tcpconnected</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>tcpconnected(socket_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>udpconnect</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>udpconnect(port, mode)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sendmessage</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>sendmessage(ip, port, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>receivemessage</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>receivemessage(socket, bytes_amount, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>peekmessage</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>peekmessage(socket, bytes_amount, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>setformat</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>setformat(socket, method, seperation_string)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>lastinIP</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>lastinIP()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>lastinPort</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>lastinPort()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>setsync</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>setsync(socket, mode)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>closesocket</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>closesocket(socket)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>socklasterror</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>socklasterror()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>myhost</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>myhost()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>compareip</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>compareip(ip, masked_ip)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sockexit</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>sockexit()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>sockstart</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>sockstart()</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>hostip</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>hostip(host_name)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>getsockid</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>getsockid(sock_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>writebyte</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>writebyte(value, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>writeshort</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>writeshort(value, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>writeushort</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>writeushort(value, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>writeint</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>writeint(value, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>writeuint</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>writeuint(value, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>writefloat</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>writefloat(value, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>writedouble</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>writedouble(value, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>writechars</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>writechars(string, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>writestring</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>writestring(string, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>copybuffer</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>copybuffer(destination, source_buffer)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>copybuffer2</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>copybuffer2(destination, start_in_source, bytes_count, source_buffer)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>readbyte</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readbyte(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>readshort</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readshort(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>readushort</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readushort(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>readint</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readint(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>readuint</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readuint(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>readfloat</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readfloat(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>readdouble</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readdouble(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>readchars</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readchars(char_count, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>readstring</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readstring(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>readsep</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readsep(seperator_string, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>readbit</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>readbit(number, position)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>buildbyte</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>buildbyte()</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>getpos</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>getpos(read, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>clearbuffer</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>clearbuffer(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>buffsize</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>buffsize(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>setpos</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>setpos(position, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>bytesleft</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>bytesleft(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>createbuffer</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>createbuffer()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>freebuffer</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>freebuffer(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>bufferexists</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>bufferexists(buffer_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>md5string</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>md5string(string)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>md5buffer</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>md5buffer()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>bufferencrypt</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>bufferencrypt(password)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>bufferdecrypt</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>bufferdecrypt(password)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileopen</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>fileopen(filename, mode)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileclose</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>fileclose(file_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>filewrite</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>filewrite(file_id, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>fileread</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>fileread(file_id, bytes_count, buffer_id)</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>filepos</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>filepos(file_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>filesetpos</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>filesetpos(file_id, position)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>filesize</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>filesize(file_id)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>adler32</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>adler32()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>getmacaddress</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>getmacaddress()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>iptouint</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>iptouint(ip)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>uinttoip</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>uinttoip(number)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>netconnected</name>
          <externalName></externalName>
          <kind>2</kind>
          <help>netconnected()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
      </functions>
      <constants/>
    </file>
  </files>
</extension>
