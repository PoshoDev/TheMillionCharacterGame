<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{   
    window_set_caption("Controller Test v.2");

    gamepad_set_axis_deadzone(0,0.25); // set dead zones for axes (UNDOCUMENTED FUNCTION)
    gamepad_set_button_threshold(0,0.5); // set thresholds for buttons
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if (gamepad_is_supported())                                                       // are controllers supported om this platform?
    {         
        if (gamepad_is_connected(0))                                                 // controller plugged in?
        {
            // continuous presses - activates as long as button is held down
                              
            if (gamepad_button_check(0,gp_face1))                                      // A creates snow
                effect_create_above(ef_snow,0,0,0,c_lime);
            
            if (gamepad_button_check(0,gp_face2))                                      // B creates smoke                                       
                effect_create_above(ef_smokeup,320,240,2,c_red);               
            
            if (gamepad_button_check(0,gp_face3))                                      // x creates rain                                       
                effect_create_above(ef_rain,0,0,2,c_blue);
                
            if (gamepad_button_check(0,gp_face4))                                      // y creates cloud                                       
                effect_create_above(ef_cloud,random_range(0,640),random_range(0,480),0,c_yellow); 
                
            background_hspeed[1] = -4 * gamepad_button_value(0,gp_shoulderlb);         // LT and RT make backgrounds to scroll  
            background_hspeed[2] = 4 * gamepad_button_value(0,gp_shoulderrb); 
            
            // instantaneous presses - only triggers once per press
            
            if (gamepad_button_check_pressed(0,gp_shoulderl))                              // LB creates fireworks                                                                     
                effect_create_above(ef_firework,random_range(0,640),random_range(0,480),1,c_fuchsia); 
            
            if (gamepad_button_check_pressed(0,gp_shoulderr))                              // RB creates explosion                                                                   
                effect_create_above(ef_explosion,random_range(0,640),random_range(0,480),1,make_color_rgb(255,128,0)); 
                
            if (gamepad_button_check_pressed(0,gp_select))                                // Back creates rings                                                                    
                effect_create_above(ef_ring,random_range(0,640),random_range(0,480),1,make_color_rgb(0,128,255)); 
            
            if (gamepad_button_check_pressed(0,gp_start))                                  // Start creates stars                                                                   
                effect_create_above(ef_star,random_range(0,640),random_range(0,480),2,make_color_rgb(128,255,0)); 
        }
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if (gamepad_is_supported())                                                       // are controllers supported om this platform?
    {         
        if (gamepad_is_connected(0))                                                 // controller plugged in?
        {           
            draw_set_color(c_black);                 
            draw_text(4,4,"Gamepad plugged in");                                        // yes
            draw_text(4,20,"Name: " + gamepad_get_description(0));                                // name of controller
            draw_text(4,36,"Number of axes: " + string(gamepad_axis_count(0)));              // total number of axes (= 5 for Xbox 360 controllers)
            draw_text(4,52,"Number of button: " + string(gamepad_button_count(0)));         // total number of buttons (= 10 for Xbox 360 controllers)
                       
            draw_text(4,70,"A: " + string(gamepad_button_check(0,gp_face1)));                // A
            draw_text(4,86,"B: " + string(gamepad_button_check(0,gp_face2)));                // B
            draw_text(4,102,"X: " + string(gamepad_button_check(0,gp_face1)));                // X
            draw_text(4,118,"Y: " + string(gamepad_button_check(0,gp_face4)));                // Y
            draw_text(4,134,"LB: " + string(gamepad_button_check(0,gp_shoulderl)));           // LB
            draw_text(4,150,"RB: " + string(gamepad_button_check(0,gp_shoulderr)));           // RB
            draw_text(4,166,"Back: " + string(gamepad_button_check(0,gp_select)));            // Back
            draw_text(4,182,"Start: " + string(gamepad_button_check(0,gp_start)));            // Start
            draw_text(4,198,"LS: " + string(gamepad_button_check(0,gp_stickl)));              // LS
            draw_text(4,214,"RS: " + string(gamepad_button_check(0,gp_stickr)));              // RS
            
            draw_text(4,230,"Left Stick X Tilt: " + string(gamepad_axis_value(0,gp_axislh)));          // left stick tilt
            draw_text(4,246,"Left Stick Y Tilt: " + string(gamepad_axis_value(0,gp_axislv)));
            draw_text(4,262,"Right Stick X Tilt: " + string(gamepad_axis_value(0,gp_axisrh)));         // right stick tilt
            draw_text(4,278,"Right Stick Y Tilt: " + string(gamepad_axis_value(0,gp_axisrv)));
            draw_text(4,294,"LT: " + string(gamepad_button_value(0,gp_shoulderlb)));                   // LT
            draw_text(4,310,"RT: " + string(gamepad_button_value(0,gp_shoulderrb)));                   // RT
            
            draw_text(4,328,"Left: " + string(gamepad_button_check(0,gp_padl)));                         // D-pad left
            draw_text(4,344,"Right: " + string(gamepad_button_check(0,gp_padr)));                         // D-pad right
            draw_text(4,360,"Up: " + string(gamepad_button_check(0,gp_padu)));                         // D-pad up
            draw_text(4,376,"Down: " + string(gamepad_button_check(0,gp_padd)));                         // D-pad down
        }

        else
            draw_text(4,4,"Gamepad not plugged in");                                 // no gamepad found
    }
    
    else                                                                            // can't use gamepads
        draw_text(4,4,"Gamepads not supported on this platform");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
